// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpfa.proto

#ifndef PROTOBUF_cpfa_2eproto__INCLUDED
#define PROTOBUF_cpfa_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cpfa_2eproto();
void protobuf_AssignDesc_cpfa_2eproto();
void protobuf_ShutdownFile_cpfa_2eproto();

class Cpfa;

// ===================================================================

class Cpfa : public ::google::protobuf::Message {
 public:
  Cpfa();
  virtual ~Cpfa();

  Cpfa(const Cpfa& from);

  inline Cpfa& operator=(const Cpfa& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cpfa& default_instance();

  void Swap(Cpfa* other);

  // implements Message ----------------------------------------------

  Cpfa* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cpfa& from);
  void MergeFrom(const Cpfa& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double probabilityOfSwitchingToSearching = 1;
  inline bool has_probabilityofswitchingtosearching() const;
  inline void clear_probabilityofswitchingtosearching();
  static const int kProbabilityOfSwitchingToSearchingFieldNumber = 1;
  inline double probabilityofswitchingtosearching() const;
  inline void set_probabilityofswitchingtosearching(double value);

  // required double probabilityOfReturningToNest = 2;
  inline bool has_probabilityofreturningtonest() const;
  inline void clear_probabilityofreturningtonest();
  static const int kProbabilityOfReturningToNestFieldNumber = 2;
  inline double probabilityofreturningtonest() const;
  inline void set_probabilityofreturningtonest(double value);

  // required double uninformedSearchVariation = 3;
  inline bool has_uninformedsearchvariation() const;
  inline void clear_uninformedsearchvariation();
  static const int kUninformedSearchVariationFieldNumber = 3;
  inline double uninformedsearchvariation() const;
  inline void set_uninformedsearchvariation(double value);

  // required double rateOfInformedSearchDecay = 4;
  inline bool has_rateofinformedsearchdecay() const;
  inline void clear_rateofinformedsearchdecay();
  static const int kRateOfInformedSearchDecayFieldNumber = 4;
  inline double rateofinformedsearchdecay() const;
  inline void set_rateofinformedsearchdecay(double value);

  // required double rateOfSiteFidelity = 5;
  inline bool has_rateofsitefidelity() const;
  inline void clear_rateofsitefidelity();
  static const int kRateOfSiteFidelityFieldNumber = 5;
  inline double rateofsitefidelity() const;
  inline void set_rateofsitefidelity(double value);

  // required double rateOfLayingPheromone = 6;
  inline bool has_rateoflayingpheromone() const;
  inline void clear_rateoflayingpheromone();
  static const int kRateOfLayingPheromoneFieldNumber = 6;
  inline double rateoflayingpheromone() const;
  inline void set_rateoflayingpheromone(double value);

  // required double rateOfPheromoneDecay = 7;
  inline bool has_rateofpheromonedecay() const;
  inline void clear_rateofpheromonedecay();
  static const int kRateOfPheromoneDecayFieldNumber = 7;
  inline double rateofpheromonedecay() const;
  inline void set_rateofpheromonedecay(double value);

  // @@protoc_insertion_point(class_scope:proto.Cpfa)
 private:
  inline void set_has_probabilityofswitchingtosearching();
  inline void clear_has_probabilityofswitchingtosearching();
  inline void set_has_probabilityofreturningtonest();
  inline void clear_has_probabilityofreturningtonest();
  inline void set_has_uninformedsearchvariation();
  inline void clear_has_uninformedsearchvariation();
  inline void set_has_rateofinformedsearchdecay();
  inline void clear_has_rateofinformedsearchdecay();
  inline void set_has_rateofsitefidelity();
  inline void clear_has_rateofsitefidelity();
  inline void set_has_rateoflayingpheromone();
  inline void clear_has_rateoflayingpheromone();
  inline void set_has_rateofpheromonedecay();
  inline void clear_has_rateofpheromonedecay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double probabilityofswitchingtosearching_;
  double probabilityofreturningtonest_;
  double uninformedsearchvariation_;
  double rateofinformedsearchdecay_;
  double rateofsitefidelity_;
  double rateoflayingpheromone_;
  double rateofpheromonedecay_;
  friend void  protobuf_AddDesc_cpfa_2eproto();
  friend void protobuf_AssignDesc_cpfa_2eproto();
  friend void protobuf_ShutdownFile_cpfa_2eproto();

  void InitAsDefaultInstance();
  static Cpfa* default_instance_;
};
// ===================================================================


// ===================================================================

// Cpfa

// required double probabilityOfSwitchingToSearching = 1;
inline bool Cpfa::has_probabilityofswitchingtosearching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cpfa::set_has_probabilityofswitchingtosearching() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cpfa::clear_has_probabilityofswitchingtosearching() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cpfa::clear_probabilityofswitchingtosearching() {
  probabilityofswitchingtosearching_ = 0;
  clear_has_probabilityofswitchingtosearching();
}
inline double Cpfa::probabilityofswitchingtosearching() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.probabilityOfSwitchingToSearching)
  return probabilityofswitchingtosearching_;
}
inline void Cpfa::set_probabilityofswitchingtosearching(double value) {
  set_has_probabilityofswitchingtosearching();
  probabilityofswitchingtosearching_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.probabilityOfSwitchingToSearching)
}

// required double probabilityOfReturningToNest = 2;
inline bool Cpfa::has_probabilityofreturningtonest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cpfa::set_has_probabilityofreturningtonest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cpfa::clear_has_probabilityofreturningtonest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cpfa::clear_probabilityofreturningtonest() {
  probabilityofreturningtonest_ = 0;
  clear_has_probabilityofreturningtonest();
}
inline double Cpfa::probabilityofreturningtonest() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.probabilityOfReturningToNest)
  return probabilityofreturningtonest_;
}
inline void Cpfa::set_probabilityofreturningtonest(double value) {
  set_has_probabilityofreturningtonest();
  probabilityofreturningtonest_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.probabilityOfReturningToNest)
}

// required double uninformedSearchVariation = 3;
inline bool Cpfa::has_uninformedsearchvariation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cpfa::set_has_uninformedsearchvariation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cpfa::clear_has_uninformedsearchvariation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cpfa::clear_uninformedsearchvariation() {
  uninformedsearchvariation_ = 0;
  clear_has_uninformedsearchvariation();
}
inline double Cpfa::uninformedsearchvariation() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.uninformedSearchVariation)
  return uninformedsearchvariation_;
}
inline void Cpfa::set_uninformedsearchvariation(double value) {
  set_has_uninformedsearchvariation();
  uninformedsearchvariation_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.uninformedSearchVariation)
}

// required double rateOfInformedSearchDecay = 4;
inline bool Cpfa::has_rateofinformedsearchdecay() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cpfa::set_has_rateofinformedsearchdecay() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cpfa::clear_has_rateofinformedsearchdecay() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cpfa::clear_rateofinformedsearchdecay() {
  rateofinformedsearchdecay_ = 0;
  clear_has_rateofinformedsearchdecay();
}
inline double Cpfa::rateofinformedsearchdecay() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.rateOfInformedSearchDecay)
  return rateofinformedsearchdecay_;
}
inline void Cpfa::set_rateofinformedsearchdecay(double value) {
  set_has_rateofinformedsearchdecay();
  rateofinformedsearchdecay_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.rateOfInformedSearchDecay)
}

// required double rateOfSiteFidelity = 5;
inline bool Cpfa::has_rateofsitefidelity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cpfa::set_has_rateofsitefidelity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cpfa::clear_has_rateofsitefidelity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cpfa::clear_rateofsitefidelity() {
  rateofsitefidelity_ = 0;
  clear_has_rateofsitefidelity();
}
inline double Cpfa::rateofsitefidelity() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.rateOfSiteFidelity)
  return rateofsitefidelity_;
}
inline void Cpfa::set_rateofsitefidelity(double value) {
  set_has_rateofsitefidelity();
  rateofsitefidelity_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.rateOfSiteFidelity)
}

// required double rateOfLayingPheromone = 6;
inline bool Cpfa::has_rateoflayingpheromone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cpfa::set_has_rateoflayingpheromone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cpfa::clear_has_rateoflayingpheromone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cpfa::clear_rateoflayingpheromone() {
  rateoflayingpheromone_ = 0;
  clear_has_rateoflayingpheromone();
}
inline double Cpfa::rateoflayingpheromone() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.rateOfLayingPheromone)
  return rateoflayingpheromone_;
}
inline void Cpfa::set_rateoflayingpheromone(double value) {
  set_has_rateoflayingpheromone();
  rateoflayingpheromone_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.rateOfLayingPheromone)
}

// required double rateOfPheromoneDecay = 7;
inline bool Cpfa::has_rateofpheromonedecay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cpfa::set_has_rateofpheromonedecay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cpfa::clear_has_rateofpheromonedecay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cpfa::clear_rateofpheromonedecay() {
  rateofpheromonedecay_ = 0;
  clear_has_rateofpheromonedecay();
}
inline double Cpfa::rateofpheromonedecay() const {
  // @@protoc_insertion_point(field_get:proto.Cpfa.rateOfPheromoneDecay)
  return rateofpheromonedecay_;
}
inline void Cpfa::set_rateofpheromonedecay(double value) {
  set_has_rateofpheromonedecay();
  rateofpheromonedecay_ = value;
  // @@protoc_insertion_point(field_set:proto.Cpfa.rateOfPheromoneDecay)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cpfa_2eproto__INCLUDED
